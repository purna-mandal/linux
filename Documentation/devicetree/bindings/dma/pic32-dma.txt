* PIC32 DMA contorller driver

The PIC32 DMA controller has 8 channels in total.
Only the lower 13 channels have an associated IRQ.
Some arbitrary channels are used by the firmware
(1,3,6,7 in the current firmware version).
The channels 0,2 and 3 have special functionality
and should not be used by the driver.

Required properties:
- compatible: Should be "microchip,pic32-dma".
- reg: Should contain DMA registers location and length.
- interrupts: Should contain the DMA interrupts associated
		to the DMA channels in ascending order.

Example:

	dma0: dma@bf811000 {
		compatible = "microchip,pic32-dma";
		reg = <0xbf811000 0x2000>;
		interrupts = <DMA_CHANNEL_0 DEFAULT_INT_PRI IRQ_TYPE_NONE>,
			<DMA_CHANNEL_1 DEFAULT_INT_PRI IRQ_TYPE_NONE>,
		       <DMA_CHANNEL_2 DEFAULT_INT_PRI IRQ_TYPE_NONE>,
		       <DMA_CHANNEL_3 DEFAULT_INT_PRI IRQ_TYPE_NONE>,
		       <DMA_CHANNEL_4 DEFAULT_INT_PRI IRQ_TYPE_NONE>,
		       <DMA_CHANNEL_5 DEFAULT_INT_PRI IRQ_TYPE_NONE>,
		       <DMA_CHANNEL_6 DEFAULT_INT_PRI IRQ_TYPE_NONE>,
		       <DMA_CHANNEL_7 DEFAULT_INT_PRI IRQ_TYPE_NONE>;
	};

DMA clients connected to the PIC32 DMA controller must use the format
described in the dma.txt file, using a two-cell specifier for each channel.

Example:

	i2s5: i2s@bf821A00 {
		compatible = "microchip,pic32-i2s";
		reg = <0xbf821A00 512>;
		interrupts = <SPI6_RECEIVE_DONE DEFAULT_INT_PRI IRQ_TYPE_NONE>,
			<SPI6_TRANSFER_DONE DEFAULT_INT_PRI IRQ_TYPE_NONE>;
		dmas = <&dma 6>,
			<&dma0 7>;
		dma-names = "rx", "tx";
		clocks = <&PBCLK2>;
       };
